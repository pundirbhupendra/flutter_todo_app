// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_todo_app_clean_code/test/data/repository/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i8;
import 'package:flutter_todo_app_clean_code/core/network/network_info.dart'
    as _i4;
import 'package:flutter_todo_app_clean_code/data/datasources/todo/todo_local_data_source.dart'
    as _i7;
import 'package:flutter_todo_app_clean_code/data/datasources/todo/todo_remote_data_source.dart'
    as _i6;
import 'package:flutter_todo_app_clean_code/data/models/todo/todo_model.dart'
    as _i2;
import 'package:flutter_todo_app_clean_code/domain/entities/todo/todo.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTodoModel_0 extends _i1.SmartFake implements _i2.TodoModel {
  _FakeTodoModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodo_1 extends _i1.SmartFake implements _i3.Todo {
  _FakeTodo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i4.NetworkInfo {
  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [TodoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRemoteDataSource extends _i1.Mock
    implements _i6.TodoRemoteDataSource {
  @override
  _i5.Future<_i2.TodoModel> getTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [id],
        ),
        returnValue: _i5.Future<_i2.TodoModel>.value(_FakeTodoModel_0(
          this,
          Invocation.method(
            #getTodo,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.TodoModel>.value(_FakeTodoModel_0(
          this,
          Invocation.method(
            #getTodo,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.TodoModel>);
  @override
  _i5.Future<List<_i2.TodoModel>> getAllTodo() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodo,
          [],
        ),
        returnValue: _i5.Future<List<_i2.TodoModel>>.value(<_i2.TodoModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.TodoModel>>.value(<_i2.TodoModel>[]),
      ) as _i5.Future<List<_i2.TodoModel>>);
  @override
  _i5.Future<void> addTodo(String? task) => (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [task],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteTodo(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [TodoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoLocalDataSource extends _i1.Mock
    implements _i7.TodoLocalDataSource {
  @override
  _i5.Future<_i2.TodoModel> getTodo(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [id],
        ),
        returnValue: _i5.Future<_i2.TodoModel>.value(_FakeTodoModel_0(
          this,
          Invocation.method(
            #getTodo,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.TodoModel>.value(_FakeTodoModel_0(
          this,
          Invocation.method(
            #getTodo,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.TodoModel>);
  @override
  _i5.Future<List<_i2.TodoModel>> getAllTodo() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodo,
          [],
        ),
        returnValue: _i5.Future<List<_i2.TodoModel>>.value(<_i2.TodoModel>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i2.TodoModel>>.value(<_i2.TodoModel>[]),
      ) as _i5.Future<List<_i2.TodoModel>>);
  @override
  _i5.Future<_i3.Todo> addTodo(String? task) => (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [task],
        ),
        returnValue: _i5.Future<_i3.Todo>.value(_FakeTodo_1(
          this,
          Invocation.method(
            #addTodo,
            [task],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.Todo>.value(_FakeTodo_1(
          this,
          Invocation.method(
            #addTodo,
            [task],
          ),
        )),
      ) as _i5.Future<_i3.Todo>);
  @override
  _i5.Future<void> getDeleteTodo(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getDeleteTodo,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [FirebaseException].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockFirebaseException extends _i1.Mock implements _i8.FirebaseException {
  @override
  String get plugin => (super.noSuchMethod(
        Invocation.getter(#plugin),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get code => (super.noSuchMethod(
        Invocation.getter(#code),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
}
